image: "rust:latest"

stages:
  - test:cargo
  - test:coverage

# Use cargo to test the project
test:cargo:
  stage: test:cargo
  tags:
    - grouprunner
  services: 
    - postgres:latest
  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: testdb
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: my_secret
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_URL: postgres://postgres:my_secret@postgres:5432/testdb
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo install sqlx-cli
    - sqlx migrate run
    - cargo build
    - cargo test --workspace

test:coverage:
  stage: test:cargo
  tags:
    - grouprunner
  services: 
    - postgres:latest
  variables:
    # Configure postgres service (https://hub.docker.com/_/postgres/)
    POSTGRES_DB: testdb
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: my_secret
    POSTGRES_HOST_AUTH_METHOD: trust
    DATABASE_URL: postgres://postgres:my_secret@postgres:5432/testdb
  coverage: '/^\d+.\d+% coverage/'
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo install sqlx-cli cargo-tarpaulin
    - sqlx migrate run
    - cargo build
    - cargo tarpaulin --ignore-tests --engine Llvm --out xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: cobertura.xml